<?xml version="1.0"?>
<adios-config>

    <!--============================================
           Configuration for the basic shapes example
        ============================================-->

    <io name="Shapes">
        <engine type="FileStream">
            <parameter key="OpenTimeoutSecs" value="10.0"/>
        </engine>
    </io>


    <!-- example engines

        <engine type="File"/>
        <engine type="FileStream"/>
        <engine type="BPFile"/>
        <engine type="BP4"/>
        <engine type="HDF5"/>
        <engine type="SST"/>
        <engine type="InSituMPI"/>

        === FileStream ===
        The preferred engine name, that produces BP4 file, but
        it can open for read BP3 and BP4 files as well as HDF5 files. 
        It properly supports reading steps one by one as the staging 
        engines.

        === File ===
        Same as FileStream but does not properly read step by step,
        so use it only for file writes and post-mortem file reading. 


        === SST ===
        SST can be set up to force blocking the producer on a consumer
        or to discard unused data. Separately, it can be also set up
        so that the producer is waiting for a first connection or
        just starts running alone.

        Producer start alone, and it does not keep data.
        Consumer will get recent data when connects.
        If consumer(s) goes away, producer runs alone and
           discards data.
        <engine type="SST">
            <parameter key="RendezvousReaderCount" value="0"/>
            <parameter key="QueueLimit" value="1"/>
            <parameter key="QueueFullPolicy" value="Discard"/>
        </engine>

        Producer will wait for 1 consumer to connect before proceeding.
        Producer will buffer 5 output steps so a consumer may lag behind a bit.
        If consumer(s) goes away, producer will block indefinitely after
          the buffer is full.
        <engine type="SST">
            <parameter key="RendezvousReaderCount" value="1"/>
            <parameter key="QueueLimit" value="5"/>
            <parameter key="QueueFullPolicy" value="Block"/>
        </engine>

        === BP4 ===
        BP4 is a new file format. 
        'SubStreams' parameter controls how many files
            are created under the output folder. By default, each process
            writes its own file (N-to-N pattern), which is fast but is
            not scalable to tens of thousands of processes. The number of
            substreams should be chosen for the capability of the underlying
            filesystem (e.g. twice the number of OST servers on a Lustre file system).
        'OpenTimeoutSecs' paramter specifies how long to wait on a reading Open
            for the file to appear. Useful for streaming when the reader starts up
            faster than the writer produce any output. 
        <engine type="BPFile">
            <parameter key="SubStreams" value="4"/>
            <parameter key="OpenTimeoutSecs" value="10.0"/>
        </engine>

        === BPFile ===
        BPFile is a token name for the BP file format and BP4 engine
        It can read BP version 3 and version 4 files

     -->
</adios-config>

